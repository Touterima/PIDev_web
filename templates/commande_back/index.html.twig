{% extends 'baseBack.html.twig' %}

{% block title %}Commande Index{% endblock %}

{% block body %}
<div class="container mt-4"> {# Added margin-top for spacing #}
    <div class="d-flex justify-content-between align-items-center mb-3"> {# Flex layout for header section #}
        <h1 class="mb-0">Commande Index</h1>
        <a href="{{ path('app_commande_back_new') }}" class="btn btn-success">Create New</a>
    </div>

    <div class="form-group mb-3">
        <input type="text" id="searchInput" class="form-control" placeholder="Search in all columns...">
    </div>

    {% if commandes is not empty %}
        <table class="table table-striped"> {# Added Bootstrap styling for striped rows #}
            <thead class="thead-dark"> {# Darker header background #}
                <tr>
                    <th>ID</th>
                    <th>User ID</th>
                    <th>Product ID</th>
                    <th>Quantity</th>
                    <th>Date Created</th>
                    <th>Actions</th>
                </tr>
                <tr> {# Input row for filtering #}
                    <td><input type="text" class="form-control" id="filterId" placeholder="Filter by ID"></td>
                    <td><input type="text" class="form-control" id="filterUserId" placeholder="Filter by User ID"></td>
                    <td><input type="text" class="form-control" id="filterProductId" placeholder="Filter by Product ID"></td>
                    <td><input type="text" class="form-control" id="filterQuantity" placeholder="Filter by Quantity"></td>
                    <td><input type="text" class="form-control" id="filterDateCreated" placeholder="Filter by Date"></td>
                    <td></td> {# No action filter #}
                </tr>
            </thead>
            <tbody id="commandeTableBody">
                {% for commande in commandes %}
                    <tr>
                        <td>{{ commande.id }}</td>
                        <td>{{ commande.idUser }}</td>
                        <td>{{ commande.idProduit }}</td>
                        <td>{{ commande.quantity }}</td>
                        <td>{{ commande.datecreation ? commande.datecreation|date('Y-m-d') : '' }}</td>
                        <td>
                            <a href="{{ path('app_commande_back_show', {'id': commande.id}) }}" class="btn btn-primary btn-sm">Show</a>
                            <a href="{{ path('app_commande_back_edit', {'id': commande.id}) }}" class="btn btn-warning btn-sm">Edit</a>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    {% else %}
        <div class="alert alert-info">No records found.</div> {# Alert box for empty message #}
    {% endif %}
</div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const tableBody = document.getElementById('commandeTableBody');

        const filters = {
            id: document.getElementById('filterId'),
            userId: document.getElementById('filterUserId'),
            productId: document.getElementById('filterProductId'),
            quantity: document.getElementById('filterQuantity'),
            dateCreated: document.getElementById('filterDateCreated')
        };

        const filterTable = () => {
            Array.from(tableBody.children).forEach(row => {
                const idText = row.children[0].textContent.toLowerCase();
                const userIdText = row.children[1].textContent.toLowerCase();
                const productIdText = row.children[2].textContent.toLowerCase();
                const quantityText = row.children[3].textContent.toLowerCase();
                const dateCreatedText = row.children[4].textContent.toLowerCase();

                const matchesId = idText.includes(filters.id.value.toLowerCase());
                const matchesUserId = userIdText.includes(filters.userId.value.toLowerCase());
                const matchesProductId = productIdText.includes(filters.productId.value.toLowerCase());
                const matchesQuantity = quantityText.includes(filters.quantity.value.toLowerCase());
                const matchesDateCreated = dateCreatedText.includes(filters.dateCreated.value.toLowerCase());

                const isMatch = matchesId && matchesUserId && matchesProductId && matchesQuantity && matchesDateCreated;

                row.style.display = isMatch ? '' : 'none';
            });
        };

        // Apply filter to each input field
        Object values(filters).forEach(filter => {
            filter.addEventListener('input', filterTable); // Apply filter on input change
        });
    });
</script>
{% endblock %}
